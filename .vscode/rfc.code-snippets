{
	// Place your chat workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"Empty functional component": {
		"scope": "javascript,javascriptreact,typescriptreact,typescript",
		"prefix": "rfe",
		"body": [
			"import { FC } from 'react'",
			"",
			"const $1: FC = () => {",
			"  return <$2>$3</$2>",
			"}",
			"",
			"export { $1 }",
			"",
		],
		"description": "Empty functional component"
	},
	"Functional component with children": {
		"scope": "typescriptreact,typescript",
		"prefix": "rfc",
		"body": [
			"import { FC, PropsWithChildren } from 'react'",
			"",
			"const $1: FC<PropsWithChildren> = ({ children }) => {",
			"  return <$2>$3</$2>",
			"}",
			"",
			"export { $1 }",
			"",
		],
		"description": "Functional component with children"
	},
	"Functional component with props": {
		"scope": "typescriptreact,typescript",
		"prefix": "rfp",
		"body": [
			"import { FC } from 'react'",
			"",
			"interface $1Props  {$2}",
			"",
			"const $1: FC<$1Props> = ${3:props} => {",
			"  return <$4>$5</$4>",
			"}",
			"",
			"export { $1 }",
			"",
		],
		"description": "Functional component with props"
	},
	"Functional component with children and props":{
		"scope": "typescriptreact,typescript",
		"prefix": "rfpc",
		"body": [
			"import { FC, PropsWithChildren } from 'react'",
			"",
			"interface $1Props  {$2}",
			"",
			"const $1: FC<PropsWithChildren<$1Props>> = ${3:props} => {",
			"  return <$4>$5</$4>",
			"}",
			"",
			"export { $1 }",
			"",
		],
		"description": "Functional component with children and props"
	}
}